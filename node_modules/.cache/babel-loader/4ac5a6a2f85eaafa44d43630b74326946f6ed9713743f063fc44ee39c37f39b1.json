{"ast":null,"code":"var _jsxFileName = \"C:\\\\NBAD\\\\S\\\\S1\\\\src\\\\components\\\\Dashboard\\\\Charts.js\",\n  _s = $RefreshSig$();\n//EconomicChart.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport apiService from '../services/apiService';\nimport '../../styles/EconomicChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EconomicChart = ({\n  token\n}) => {\n  _s();\n  const barChartCanvasRef = useRef(null);\n  const areaChartCanvasRef = useRef(null);\n  const pieChartCanvasRef = useRef(null);\n  const lineChartCanvasRef = useRef(null);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [budgetData, setBudgetData] = useState([]);\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\n  useEffect(() => {\n    const fetchDataAndCreateCharts = async () => {\n      try {\n        const budgetEndpoint = selectedMonth ? `/budgets/getAllBudgets/${selectedMonth}` : '/budgets/getAllBudgets';\n        const capacityEndpoint = selectedMonth ? `/budgets/capacity/${selectedMonth}` : '/budgets/capacity';\n        const [budgetResponse, capacityResponse] = await Promise.all([apiService.get(budgetEndpoint, token, {\n          params: {\n            month: parseInt(selectedMonth, 10)\n          }\n        }), apiService.get(capacityEndpoint, token)]);\n        const budgetData = budgetResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        setBudgetData(budgetData);\n        setBudgetCapacity(capacityData);\n        setLoading(false);\n        createBarChart();\n        pieChartCanvasRef();\n        createLineChart();\n      } catch (error) {\n        console.error('Error fetching budget data: ', error);\n        setLoading(false);\n      }\n    };\n    fetchDataAndCreateCharts();\n  }, [token, selectedMonth]);\n  useEffect(() => {\n    if (!loading) {\n      createBarChart();\n      createPieChart();\n      createLineChart();\n    }\n  }, [loading, budgetData, budgetCapacity]);\n  const createAreaChart = () => {\n    const canvas = areaChartCanvasRef.current; // Use the new canvas ref\n    if (!canvas) {\n      console.error('Area Chart Canvas element not found');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Unable to get 2D context for Area Chart canvas');\n      return;\n    }\n    try {\n      if (canvas.chart) {\n        canvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetName: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const chartData = {\n        labels: combinedData.map(item => item.budgetName),\n        datasets: [{\n          label: 'Actual Expenditure',\n          backgroundColor: 'rgba(255, 51, 162, 0.5)',\n          borderColor: 'rgba(255, 51, 162, 1)',\n          borderWidth: 1,\n          fill: true,\n          // This enables the area fill\n          data: combinedData.map(item => item.actualExpenditure)\n        }, {\n          label: 'Budget',\n          backgroundColor: 'rgba(126, 51, 162, 0.5)',\n          borderColor: 'rgba(126, 51, 162, 1)',\n          borderWidth: 1,\n          fill: true,\n          // This enables the area fill\n          data: combinedData.map(item => item.budgetCapacity)\n        }]\n      };\n      canvas.chart = new Chart(ctx, {\n        type: 'line',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating area chart: ', error);\n    }\n  };\n  const createPieChart = () => {\n    const pieCanvas = pieChartCanvasRef.current;\n    if (!pieCanvas) {\n      console.error('Pie Canvas element not found');\n      return;\n    }\n    const pieCtx = pieCanvas.getContext('2d');\n    if (!pieCtx) {\n      console.error('Unable to get 2D context for pie canvas');\n      return;\n    }\n    try {\n      if (pieCanvas.chart) {\n        pieCanvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetname: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const pieData = combinedData.map((item, index) => {\n        const actualExpenditure = item.actualExpenditure || 0;\n        const budgetCapacity = item.budgetCapacity || 0;\n        const remainingBudget = budgetCapacity - actualExpenditure;\n        const backgroundColors = ['#FF5733', '#33FF7E', '#33A2FF', '#FF33A2', '#7E33FF', '#FF7E33', '#33FFA2', '#A2FF33', '#FF3333', '#33FF33', '#FFA233', '#FF33F5', '#7E7E7E', '#3333FF', '#7E33A2', '#7E33FF', '#33A2A2', '#33FF33', '#FFA27E', '#33A233'];\n        return {\n          label: item.budgetname,\n          data: [actualExpenditure, remainingBudget],\n          backgroundColor: backgroundColors[index % backgroundColors.length]\n        };\n      });\n      console.log('pieChartData:', pieData);\n      pieCanvas.chart = new Chart(pieCtx, {\n        type: 'pie',\n        data: {\n          labels: pieData.map(item => item.label),\n          datasets: [{\n            data: pieData.map(item => item.data[0]),\n            backgroundColor: pieData.map(item => item.backgroundColor)\n          }]\n        }\n      });\n    } catch (error) {\n      console.error('Error creating pie chart: ', error);\n    }\n  };\n  const createLineChart = async () => {\n    const lineCanvas = lineChartCanvasRef.current;\n    if (!lineCanvas) {\n      console.error('Line Canvas element not found');\n      return;\n    }\n    const lineCtx = lineCanvas.getContext('2d');\n    if (!lineCtx) {\n      console.error('Unable to get 2D context for line canvas');\n      return;\n    }\n    try {\n      if (lineCanvas.chart) {\n        lineCanvas.chart.destroy();\n      }\n      const cumulativeData = [];\n      for (let month = 1; month <= 12; month++) {\n        const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, token);\n        const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, token);\n        const budgetData = budgetsResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        let totalBudget = 0;\n        let totalCapacity = 0;\n        for (const item of budgetData) {\n          totalBudget += Number(item.budgetnumber) || 0;\n        }\n        for (const item of capacityData) {\n          totalCapacity += Number(item.budgetnumber) || 0;\n        }\n        cumulativeData.push({\n          month: month,\n          totalBudget: totalBudget,\n          totalCapacity: totalCapacity\n        });\n      }\n      const chartData = {\n        labels: cumulativeData.map(item => item.month),\n        datasets: [{\n          label: 'Cumulative Actual Budget',\n          backgroundColor: '#FF33A2',\n          borderColor: '#FF33A2',\n          data: cumulativeData.map(item => item.totalBudget),\n          fill: false\n        }, {\n          label: 'Cumulative Budget',\n          backgroundColor: '#7E33A2',\n          borderColor: '#7E33A2',\n          data: cumulativeData.map(item => item.totalCapacity),\n          fill: false\n        }]\n      };\n      lineCanvas.chart = new Chart(lineCtx, {\n        type: 'line',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: 'category',\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n            },\n            y: {\n              type: 'linear',\n              position: 'left'\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating line chart: ', error);\n    }\n  };\n  const createBarChart = () => {\n    const canvas = barChartCanvasRef.current;\n    if (!canvas) {\n      console.error('Bar Chart Canvas element not found');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Unable to get 2D context for Bar Chart canvas');\n      return;\n    }\n    try {\n      if (canvas.chart) {\n        canvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetName: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const chartData = {\n        labels: combinedData.map(item => item.budgetName),\n        datasets: [{\n          label: 'Actual Expenditure',\n          backgroundColor: '#FF33A2',\n          data: combinedData.map(item => item.actualExpenditure)\n        }, {\n          label: 'Budget',\n          backgroundColor: '#7E33A2',\n          data: combinedData.map(item => item.budgetCapacity)\n        }]\n      };\n      canvas.chart = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating bar chart: ', error);\n    }\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Multiple of Budget Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedMonth,\n          onChange: handleMonthChange,\n          className: \"select-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"January\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"February\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"March\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"April\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"May\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6\",\n            children: \"June\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"7\",\n            children: \"July\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"8\",\n            children: \"August\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"9\",\n            children: \"September\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10\",\n            children: \"October\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"11\",\n            children: \"November\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12\",\n            children: \"December\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollable-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Allocation for the Current Period Compared to Cumulative Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-canvas\",\n            ref: barChartCanvasRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Allocation for the Current Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-pie-canvas\",\n            ref: pieChartCanvasRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Budget Allocation for the Current Period Compared to Cumulative Budget(Monthly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-line-canvas\",\n            ref: lineChartCanvasRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Area Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-area-canvas\",\n            ref: areaChartCanvasRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(EconomicChart, \"RCxNljW65Oo2ysH5YYWKxZIDA9s=\");\n_c = EconomicChart;\nexport default EconomicChart;\nvar _c;\n$RefreshReg$(_c, \"EconomicChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","apiService","jsxDEV","_jsxDEV","EconomicChart","token","_s","barChartCanvasRef","areaChartCanvasRef","pieChartCanvasRef","lineChartCanvasRef","selectedMonth","setSelectedMonth","loading","setLoading","budgetData","setBudgetData","budgetCapacity","setBudgetCapacity","fetchDataAndCreateCharts","budgetEndpoint","capacityEndpoint","budgetResponse","capacityResponse","Promise","all","get","params","month","parseInt","data","capacityData","createBarChart","createLineChart","error","console","createPieChart","createAreaChart","canvas","current","ctx","getContext","chart","destroy","combinedData","map","dataItem","matchingCapacity","find","capacityItem","budgetname","budgetName","actualExpenditure","budgetnumber","chartData","labels","item","datasets","label","backgroundColor","borderColor","borderWidth","fill","type","options","scales","x","stacked","y","pieCanvas","pieCtx","pieData","index","remainingBudget","backgroundColors","length","log","lineCanvas","lineCtx","cumulativeData","budgetsResponse","totalBudget","totalCapacity","Number","push","position","handleMonthChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","_c","$RefreshReg$"],"sources":["C:/NBAD/S/S1/src/components/Dashboard/Charts.js"],"sourcesContent":["//EconomicChart.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport apiService from '../services/apiService';\r\nimport '../../styles/EconomicChart.css';\r\n\r\nconst EconomicChart = ({ token }) => {\r\n  const barChartCanvasRef = useRef(null);\r\n  const areaChartCanvasRef = useRef(null);\r\n  const pieChartCanvasRef = useRef(null);\r\n  const lineChartCanvasRef = useRef(null);\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [budgetData, setBudgetData] = useState([]);\r\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndCreateCharts = async () => {\r\n      try {\r\n        const budgetEndpoint = selectedMonth\r\n          ? `/budgets/getAllBudgets/${selectedMonth}`\r\n          : '/budgets/getAllBudgets';\r\n\r\n        const capacityEndpoint = selectedMonth\r\n          ? `/budgets/capacity/${selectedMonth}`\r\n          : '/budgets/capacity';\r\n\r\n        const [budgetResponse, capacityResponse] = await Promise.all([\r\n          apiService.get(budgetEndpoint, token, {\r\n            params: { month: parseInt(selectedMonth, 10) },\r\n          }),\r\n          apiService.get(capacityEndpoint, token),\r\n        ]);\r\n\r\n        const budgetData = budgetResponse.data || [];\r\n        const capacityData = capacityResponse.data || [];\r\n\r\n        setBudgetData(budgetData);\r\n        setBudgetCapacity(capacityData);\r\n        setLoading(false);\r\n\r\n        createBarChart();\r\n        pieChartCanvasRef();\r\n        createLineChart();\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching budget data: ', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDataAndCreateCharts();\r\n  }, [token, selectedMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      createBarChart();\r\n      createPieChart();\r\n      createLineChart();\r\n      \r\n    }\r\n  }, [loading, budgetData, budgetCapacity]);\r\n\r\n\r\n  const createAreaChart = () => {\r\n    const canvas = areaChartCanvasRef.current; // Use the new canvas ref\r\n    if (!canvas) {\r\n      console.error('Area Chart Canvas element not found');\r\n      return;\r\n    }\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Unable to get 2D context for Area Chart canvas');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (canvas.chart) {\r\n        canvas.chart.destroy();\r\n      }\r\n\r\n      const combinedData = budgetData.map(dataItem => {\r\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\r\n        return {\r\n          budgetName: dataItem.budgetname,\r\n          actualExpenditure: dataItem.budgetnumber,\r\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\r\n        };\r\n      });\r\n\r\n      const chartData = {\r\n        labels: combinedData.map(item => item.budgetName),\r\n        datasets: [\r\n          {\r\n            label: 'Actual Expenditure',\r\n            backgroundColor: 'rgba(255, 51, 162, 0.5)',\r\n            borderColor: 'rgba(255, 51, 162, 1)',\r\n            borderWidth: 1,\r\n            fill: true, // This enables the area fill\r\n            data: combinedData.map(item => item.actualExpenditure),\r\n          },\r\n          {\r\n            label: 'Budget',\r\n            backgroundColor: 'rgba(126, 51, 162, 0.5)',\r\n            borderColor: 'rgba(126, 51, 162, 1)',\r\n            borderWidth: 1,\r\n            fill: true, // This enables the area fill\r\n            data: combinedData.map(item => item.budgetCapacity),\r\n          },\r\n        ],\r\n      };\r\n\r\n      canvas.chart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: chartData,\r\n        options: {\r\n          scales: {\r\n            x: { stacked: true }, \r\n            y: { stacked: true }, \r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating area chart: ', error);\r\n    }\r\n  };\r\n  const createPieChart = () => {\r\n    const pieCanvas = pieChartCanvasRef.current;\r\n\r\n    if (!pieCanvas) {\r\n      console.error('Pie Canvas element not found');\r\n      return;\r\n    }\r\n\r\n    const pieCtx = pieCanvas.getContext('2d');\r\n    if (!pieCtx) {\r\n      console.error('Unable to get 2D context for pie canvas');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (pieCanvas.chart) {\r\n        pieCanvas.chart.destroy();\r\n      }\r\n\r\n      const combinedData = budgetData.map(dataItem => {\r\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\r\n        return {\r\n          budgetname: dataItem.budgetname,\r\n          actualExpenditure: dataItem.budgetnumber,\r\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\r\n        };\r\n      });\r\n\r\n      const pieData = combinedData.map((item, index) => {\r\n        const actualExpenditure = item.actualExpenditure || 0;\r\n        const budgetCapacity = item.budgetCapacity || 0;\r\n        const remainingBudget = budgetCapacity - actualExpenditure;\r\n\r\n        const backgroundColors = [\r\n          '#FF5733', '#33FF7E', '#33A2FF', '#FF33A2', '#7E33FF', '#FF7E33', '#33FFA2', '#A2FF33', '#FF3333', '#33FF33',\r\n          '#FFA233', '#FF33F5', '#7E7E7E', '#3333FF', '#7E33A2', '#7E33FF', '#33A2A2', '#33FF33', '#FFA27E', '#33A233',\r\n        ];\r\n        \r\n\r\n        return {\r\n          label: item.budgetname,\r\n          data: [actualExpenditure, remainingBudget],\r\n          backgroundColor: backgroundColors[index % backgroundColors.length],\r\n        };\r\n      });\r\n\r\n      console.log('pieChartData:', pieData);\r\n\r\n      pieCanvas.chart = new Chart(pieCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: pieData.map(item => item.label),\r\n          datasets: [{\r\n            data: pieData.map(item => item.data[0]),\r\n            backgroundColor: pieData.map(item => item.backgroundColor),\r\n          }],\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating pie chart: ', error);\r\n    }\r\n  };\r\n\r\nconst createLineChart = async () => {\r\n  const lineCanvas = lineChartCanvasRef.current;\r\n\r\n  if (!lineCanvas) {\r\n    console.error('Line Canvas element not found');\r\n    return;\r\n  }\r\n\r\n  const lineCtx = lineCanvas.getContext('2d');\r\n  if (!lineCtx) {\r\n    console.error('Unable to get 2D context for line canvas');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    if (lineCanvas.chart) {\r\n      lineCanvas.chart.destroy();\r\n    }\r\n    const cumulativeData = [];\r\n\r\n    for (let month = 1; month <= 12; month++) {\r\n      const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, token);\r\n      const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, token);\r\n      const budgetData = budgetsResponse.data || [];\r\n      const capacityData = capacityResponse.data || [];\r\n\r\n      let totalBudget = 0;\r\n      let totalCapacity = 0;\r\n\r\n      for (const item of budgetData) {\r\n        totalBudget += Number(item.budgetnumber) || 0;\r\n      }\r\n\r\n      for (const item of capacityData) {\r\n        totalCapacity += Number(item.budgetnumber) || 0;\r\n      }\r\n\r\n      cumulativeData.push({\r\n        month: month,\r\n        totalBudget: totalBudget,\r\n        totalCapacity: totalCapacity,\r\n      });\r\n    }\r\n\r\n    const chartData = {\r\n      labels: cumulativeData.map(item => item.month),\r\n      datasets: [\r\n        {\r\n          label: 'Cumulative Actual Budget',\r\n          backgroundColor: '#FF33A2',\r\n          borderColor: '#FF33A2',\r\n          data: cumulativeData.map(item => item.totalBudget),\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Cumulative Budget',\r\n          backgroundColor: '#7E33A2',\r\n          borderColor: '#7E33A2',\r\n          data: cumulativeData.map(item => item.totalCapacity),\r\n          fill: false,\r\n        },\r\n        \r\n      ],\r\n    };\r\n\r\n    lineCanvas.chart = new Chart(lineCtx, {\r\n      type: 'line',\r\n      data: chartData,\r\n      options: {\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            position: 'left',\r\n          },\r\n        },\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating line chart: ', error);\r\n  }\r\n};\r\n\r\n\r\n  const createBarChart = () => {\r\n    const canvas = barChartCanvasRef.current;\r\n    if (!canvas) {\r\n      console.error('Bar Chart Canvas element not found');\r\n      return;\r\n    }\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Unable to get 2D context for Bar Chart canvas');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (canvas.chart) {\r\n        canvas.chart.destroy();\r\n      }\r\n\r\n      const combinedData = budgetData.map(dataItem => {\r\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\r\n        return {\r\n          budgetName: dataItem.budgetname,\r\n          actualExpenditure: dataItem.budgetnumber,\r\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\r\n        };\r\n      });\r\n\r\n      const chartData = {\r\n        labels: combinedData.map(item => item.budgetName),\r\n        datasets: [\r\n          {\r\n            label: 'Actual Expenditure',\r\n            backgroundColor: '#FF33A2',\r\n            data: combinedData.map(item => item.actualExpenditure),\r\n          },\r\n          {\r\n            label: 'Budget',\r\n            backgroundColor: '#7E33A2', \r\n            data: combinedData.map(item => item.budgetCapacity),\r\n          },\r\n        ],\r\n      };\r\n\r\n      canvas.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          scales: {\r\n            x: { stacked: true }, \r\n            y: { stacked: true }, \r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating bar chart: ', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleMonthChange = (event) => {\r\n    setSelectedMonth(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"budget-chart\">\r\n      <h3>Multiple of Budget Analysis</h3>\r\n      <div className=\"label-container\">\r\n        <label>\r\n          Select Month:\r\n          <select value={selectedMonth} onChange={handleMonthChange} className=\"select-dropdown\">\r\n            <option value=\"\">All Months</option>\r\n            <option value=\"1\">January</option>\r\n            <option value=\"2\">February</option>\r\n            <option value=\"3\">March</option>\r\n            <option value=\"4\">April</option>\r\n            <option value=\"5\">May</option>\r\n            <option value=\"6\">June</option>\r\n            <option value=\"7\">July</option>\r\n            <option value=\"8\">August</option>\r\n            <option value=\"9\">September</option>\r\n            <option value=\"10\">October</option>\r\n            <option value=\"11\">November</option>\r\n            <option value=\"12\">December</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"scrollable-container\">\r\n          <div className=\"charts-container\">\r\n            <div className=\"chart\">\r\n              <h3>Budget Allocation for the Current Period Compared to Cumulative Budget</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-canvas\" ref={barChartCanvasRef}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n            <div className=\"chart\">\r\n              <h3>Budget Allocation for the Current Period</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-pie-canvas\" ref={pieChartCanvasRef}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n            <div className=\"chart\">\r\n              <h3>Budget Allocation for the Current Period Compared to Cumulative Budget(Monthly)</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-line-canvas\" ref={lineChartCanvasRef}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n            <div className=\"chart\">\r\n              <h3>Area Chart</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-area-canvas\" ref={areaChartCanvasRef}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EconomicChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}